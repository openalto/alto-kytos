# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.ipv4_addr import Ipv4Addr
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class PathQueryResponse(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, ingress_point_paths: List[Ipv4Addr]=None):
        """
        PathQueryResponse - a model defined in Swagger

        :param ingress_point_paths: The ingress_point_paths of this PathQueryResponse.
        :type ingress_point_paths: List[Ipv4Addr]
        """
        self.swagger_types = {
            'ingress_point_paths': List[Ipv4Addr]
        }

        self.attribute_map = {
            'ingress_point_paths': 'ingress-point-paths'
        }

        self._ingress_point_paths = ingress_point_paths

    @classmethod
    def from_dict(cls, dikt) -> 'PathQueryResponse':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PathQueryResponse of this PathQueryResponse.
        :rtype: PathQueryResponse
        """
        return deserialize_model(dikt, cls)

    @property
    def ingress_point_paths(self) -> List[Ipv4Addr]:
        """
        Gets the ingress_point_paths of this PathQueryResponse.

        :return: The ingress_point_paths of this PathQueryResponse.
        :rtype: List[Ipv4Addr]
        """
        return self._ingress_point_paths

    @ingress_point_paths.setter
    def ingress_point_paths(self, ingress_point_paths: List[Ipv4Addr]):
        """
        Sets the ingress_point_paths of this PathQueryResponse.

        :param ingress_point_paths: The ingress_point_paths of this PathQueryResponse.
        :type ingress_point_paths: List[Ipv4Addr]
        """
        if ingress_point_paths is None:
            raise ValueError("Invalid value for `ingress_point_paths`, must not be `None`")

        self._ingress_point_paths = ingress_point_paths

