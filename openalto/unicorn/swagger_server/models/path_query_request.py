# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.query_desc import QueryDesc
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class PathQueryRequest(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, queries: List[QueryDesc]=None):
        """
        PathQueryRequest - a model defined in Swagger

        :param queries: The queries of this PathQueryRequest.
        :type queries: List[QueryDesc]
        """
        self.swagger_types = {
            'queries': List[QueryDesc]
        }

        self.attribute_map = {
            'queries': 'queries'
        }

        self._queries = queries

    @classmethod
    def from_dict(cls, dikt) -> 'PathQueryRequest':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PathQueryRequest of this PathQueryRequest.
        :rtype: PathQueryRequest
        """
        return deserialize_model(dikt, cls)

    @property
    def queries(self) -> List[QueryDesc]:
        """
        Gets the queries of this PathQueryRequest.

        :return: The queries of this PathQueryRequest.
        :rtype: List[QueryDesc]
        """
        return self._queries

    @queries.setter
    def queries(self, queries: List[QueryDesc]):
        """
        Sets the queries of this PathQueryRequest.

        :param queries: The queries of this PathQueryRequest.
        :type queries: List[QueryDesc]
        """
        if queries is None:
            raise ValueError("Invalid value for `queries`, must not be `None`")

        self._queries = queries

